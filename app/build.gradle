plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // ktLint
    id "org.jlleitschuh.gradle.ktlint" version "10.1.0"
    // Firebase
    id 'com.google.gms.google-services'
    id 'com.google.firebase.appdistribution'
    // kotlin-annotation-processing tools
    id 'kotlin-kapt'
    // DI (Dagger Hilt)
    id 'dagger.hilt.android.plugin'
    // Safe Args (Navigation)
    id 'androidx.navigation.safeargs.kotlin'
    // Parcelable
    id 'kotlin-parcelize'
    // Licenses
    id 'com.google.android.gms.oss-licenses-plugin'
}

// https://developer.android.com/studio/publish/app-signing#secure_key
def keystorePropertiesFile = rootProject.file("key.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.aoc4456.radarchart"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('keystore/debug/aoc_debug')
            storePassword 'aoc.debug.0000'
            keyAlias 'aocm.dev'
            keyPassword 'aoc.debug.0000'
        }
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            debuggable true
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions.unitTests.includeAndroidResources = true

    // ビルド時にLintCheckする
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach
            {
                dependsOn("ktlintCheck")
                kotlinOptions {
                    jvmTarget = '1.8'
                }
            }
    lintOptions {
        disable 'NullSafeMutableLiveData'
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // ログ出力
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Google Play Core (In App Review)
    implementation 'com.google.android.play:core-ktx:1.8.1'

    // Firebase
    // Firebase Android BoM を使用すると、アプリで常に互換性のある Firebase ライブラリ バージョンが使用されるようになります。
    implementation platform('com.google.firebase:firebase-bom:28.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // DI (Dagger Hilt)
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // Hilt with Jetpack
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    // Navigation
    def nav_version = "2.3.5"
    implementation("androidx.navigation:navigation-fragment-ktx:$nav_version")
    implementation("androidx.navigation:navigation-ui-ktx:$nav_version")

    // Database (Room)
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Shared Preference
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // Chart
    implementation project(':MPChartLib')

    // Color Picker (jcenter にしか存在しない)
    implementation 'petrov.kristiyan:colorpicker-library:1.1.10'

    // Image Cropper
    implementation 'com.github.CanHub:Android-Image-Cropper:3.2.2'

    // Licenses
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // Local Unit Test
    testImplementation 'junit:junit:4.+'
    testImplementation "org.hamcrest:hamcrest-all:1.3"

    // AndroidX Testing Library
    testImplementation "androidx.test.ext:junit-ktx:1.1.3"
    testImplementation "androidx.test:core-ktx:1.4.0"
    testImplementation "org.robolectric:robolectric:4.6.1" // テストでcontextが使える
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2" // CoroutineのRunBlockingTestとか
    testImplementation "androidx.arch.core:core-testing:2.1.0" // RoomのInstantTaskExecutorRule()とか
    testImplementation "io.mockk:mockk:1.9.3"

    // androidTest
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}